@model TcpListenerWeb.Core.ViewModels.ServerSettingsViewModel

@{
    ViewData["Title"] = "Home Page";
}

<div class="text-center">
    <h1 class="display-4 mt-5">TCP Listener</h1>
    <div id="settings" class="my-border mb-2">
        @await Html.PartialAsync("_SettingsPartial", Model)
    </div>
    <div class="my-border d-flex align-items-center">
        <div class="d-flex col justify-content-center">
            <button type="button" onclick="startServer()" class="btn btn-primary me-3">Start</button>
            <button type="button" onclick="stopServer()" class="btn btn-danger">Stop</button>
        </div>
        <div class="d-flex col justify-content-center">
            <p class="me-2 p-1">Status servera:</p>
            <p id="statusServer" class="border rounded-2 p-1" style="background: red;">Zastaveny!</p>
        </div>
    </div>
</div>

<div class="container my-border mt-2">
    <div class="row justify-content-between">
        <div class="col-md-5 my-border mt-2">
            <h5 class="text-center">Prijate spravy online:</h5>
            <ul id="dataList" class="list-unstyled p-2 mt-2" style="max-height: 335px; overflow:auto;">
                @if (Model.LastReceivedMessage != null)
                {
                    @foreach (var line in Model.LastReceivedMessage)
                    {
                        <li class="ml-2">@line</li>
                    }
                }
            </ul>
        </div>
        <div class="col-md-5 my-border mt-2">
            <div class="d-flex justify-content-between align-items-center">
                <h5 class="text-center">Historie:</h5>
                <button type="button" onclick="LoadData()" class="btn btn-sm btn-primary">Nacist</button>
            </div>
            <ul id="listDataFile" class="list-unstyled p-2 mt-2" style="max-height: 335px; overflow:auto;"></ul>
        </div>
    </div>
</div>

<script>
    function startServer() {
        $.ajax({
            url: '/Home/Start',
            type: 'POST',
            data: {
                IpAddress: $("#IpAddress").val(),
                Port: $("#Port").val(),
                Password: $("#Password").val()
            },
            success: function (response) {
                if (response.status === "running") {
                    document.getElementById("statusServer").innerHTML = 'Bezi';
                    document.getElementById("statusServer").style.background = 'green';
                } else if (response.status === "already running") {
                    alert('Server uz bezi.');
                }
            },
            error: function (xhr, status, error) {
                alert('Failed to start the server: ' + error);
            }
        });
    }

    function stopServer() {
        $.ajax({
            url: '/Home/Stop',
            type: 'POST',
            success: function (response) {
                if (response.status === "stopped") {
                    document.getElementById("statusServer").innerHTML = 'Zastaveny!';
                    document.getElementById("statusServer").style.background = 'red';
                } else if (response.status === "not running") {
                    alert('Server nebezi.');
                }
            },
            error: function (xhr, status, error) {
                alert('Failed to stop the server: ' + error);
            }
        });
    }

    function LoadData() {
        $.ajax({
            url: '/Home/LoadDataFromFile',
            type: 'POST',
            success: function (response) {
                if (response.status === "success") {
                    $('#listDataFile').empty();
                    var object = '';
                    if (response.length === 0) {
                        object += '<li class="text-center">Nic nenalezeno.</li>';
                    }
                    else {
                        console.log(response);

                        $.each(response.model, function (index, model) {
                            object += '<li>' + model + '</li>';
                        });
                        $('#listDataFile').append(object);
                    }

                } else if (response.status === "not running") {

                }
            },
            error: function (xhr, status, error) {
                alert('Failed to stop the server: ' + error);
            }
        });
    }

    const connection = new signalR.HubConnectionBuilder().withUrl("/notificationHub").build();

    connection.on("ReceiveMessage", function (message) {
        const li = document.createElement("li");
        li.textContent = message;
        document.getElementById("dataList").appendChild(li);
    });

    connection.start().catch(function (err) {
        return console.error(err.toString());
    });
</script>
